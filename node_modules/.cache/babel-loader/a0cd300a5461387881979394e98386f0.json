{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  console.log(props);\n  const userStore = useSelector(state => store.user.data || {});\n  console.log(userStore);\n  const {\n    user = {}\n  } = userStore;\n\n  const hasRegisterCompleted = user => !!user.name && !!user.cpf;\n\n  const history = useHistory();\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (userStore.token) history.push(\"/\");\n        break;\n\n      case \"not-exists\":\n        if (!userStore.token) history.push(\"/login\");\n        break;\n\n      case \"incomplete-registration\":\n        if (!userStore.token) history.push(\"/login\");\n        if (!hasRegisterCompleted(user)) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/authGuard.js"],"names":["React","useEffect","useSelector","useHistory","AuthGuard","props","console","log","userStore","state","store","user","data","hasRegisterCompleted","name","cpf","history","type","token","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAIC,KAAK,CAACC,IAAN,CAAWC,IAAX,IAAmB,EAA7B,CAA7B;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,QAAM;AAAEG,IAAAA,IAAI,GAAG;AAAT,MAAgBH,SAAtB;;AACA,QAAMK,oBAAoB,GAAGF,IAAI,IAChC,CAAC,CAACA,IAAI,CAACG,IAAP,IAAe,CAAC,CAACH,IAAI,CAACI,GADvB;;AAEA,QAAMC,OAAO,GAAGb,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQI,KAAK,CAACY,IAAd;AACE,WAAK,QAAL;AACE,YAAIT,SAAS,CAACU,KAAd,EAAqBF,OAAO,CAACG,IAAR,CAAa,GAAb;AACrB;;AACF,WAAK,YAAL;AACE,YAAI,CAACX,SAAS,CAACU,KAAf,EAAsBF,OAAO,CAACG,IAAR,CAAa,QAAb;AACtB;;AACF,WAAK,yBAAL;AACE,YAAI,CAACX,SAAS,CAACU,KAAf,EAAsBF,OAAO,CAACG,IAAR,CAAa,QAAb;AACtB,YAAI,CAACN,oBAAoB,CAACF,IAAD,CAAzB,EAAiCK,OAAO,CAACG,IAAR,CAAa,YAAb;AACjC;;AACF;AACE;AAZJ;AAcD,GAfQ,EAeN,CAACX,SAAD,EAAYQ,OAAZ,EAAqBX,KAAK,CAACY,IAA3B,EAAiCN,IAAjC,CAfM,CAAT;AAiBA,SAAO,yCAAP;AACD,CA7BD;;AA+BA,eAAeP,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  \n  console.log(props)\n\n  const userStore = useSelector(state => store.user.data || {});\n  console.log(userStore)\n  const { user = {} } = userStore;\n  const hasRegisterCompleted = user =>\n   !!user.name && !!user.cpf;\n  const history = useHistory();\n\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (userStore.token) history.push(\"/\");\n        break;\n      case \"not-exists\":\n        if (!userStore.token) history.push(\"/login\");\n        break;\n      case \"incomplete-registration\":\n        if (!userStore.token) history.push(\"/login\");\n        if (!hasRegisterCompleted(user)) history.push(\"/seusdados\");\n        break;\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}