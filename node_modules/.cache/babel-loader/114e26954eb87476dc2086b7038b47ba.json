{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(store => store.user.data || {});\n  const {\n    user = {}\n  } = userStore; // const hasRegisterCompleted = user => user.name && user.cpf;\n\n  const history = useHistory();\n  const {\n    isAuth\n  } = props;\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (userStore.entity_id) history.push(\"/\");\n        break;\n\n      case \"not-exists\":\n        if (!userStore.entity_id) history.push(\"/login\");\n        break;\n\n      case \"incomplete-registration\":\n        if (!userStore.entity_id) history.push(\"/login\");\n        if (!userStore.cpf && !!isAuth) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user, isAuth]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/authGuard.js"],"names":["React","useEffect","useSelector","useHistory","AuthGuard","props","userStore","store","user","data","history","isAuth","type","entity_id","push","cpf"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,IAAmB,EAA7B,CAA7B;AACA,QAAM;AAAED,IAAAA,IAAI,GAAG;AAAT,MAAgBF,SAAtB,CAFyB,CAGzB;;AACA,QAAMI,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAaN,KAAnB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQI,KAAK,CAACO,IAAd;AACE,WAAK,QAAL;AACE,YAAIN,SAAS,CAACO,SAAd,EAAyBH,OAAO,CAACI,IAAR,CAAa,GAAb;AACzB;;AACF,WAAK,YAAL;AACE,YAAI,CAACR,SAAS,CAACO,SAAf,EAA0BH,OAAO,CAACI,IAAR,CAAa,QAAb;AAC1B;;AACF,WAAK,yBAAL;AACE,YAAI,CAACR,SAAS,CAACO,SAAf,EAA0BH,OAAO,CAACI,IAAR,CAAa,QAAb;AAC1B,YAAI,CAACR,SAAS,CAACS,GAAX,IAAkB,CAAC,CAACJ,MAAxB,EAAgCD,OAAO,CAACI,IAAR,CAAa,YAAb;AAChC;;AACF;AACE;AAZJ;AAcD,GAfQ,EAeN,CAACR,SAAD,EAAYI,OAAZ,EAAqBL,KAAK,CAACO,IAA3B,EAAiCJ,IAAjC,EAAuCG,MAAvC,CAfM,CAAT;AAiBA,SAAO,yCAAP;AACD,CA1BD;;AA4BA,eAAeP,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(store => store.user.data || {});\n  const { user = {} } = userStore;\n  // const hasRegisterCompleted = user => user.name && user.cpf;\n  const history = useHistory();\n\n  const { isAuth } = props\n\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (userStore.entity_id) history.push(\"/\");\n        break;\n      case \"not-exists\":\n        if (!userStore.entity_id) history.push(\"/login\");\n        break;\n      case \"incomplete-registration\":\n        if (!userStore.entity_id) history.push(\"/login\");\n        if (!userStore.cpf && !!isAuth) history.push(\"/seusdados\");\n        break;\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user, isAuth]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}