{"ast":null,"code":"import { useState, useEffect } from 'react';\nconst breakpoints = {\n  small: '(max-width: 539px)',\n  medium: '(min-width: 540px) and (max-width: 1023px)',\n  large: '(min-width: 1024px)'\n};\nexport function useMedia(query) {\n  const [isSmall, setSmall] = useState(window.matchMedia(breakpoints.small).matches);\n  const [isMedium, setMedium] = useState(window.matchMedia(breakpoints.medium).matches);\n  const [isLarge, setLarge] = useState(window.matchMedia(breakpoints.large).matches); // Activity normally for componentDidMount + componentDidUpdate\n\n  useEffect(() => {\n    const small = window.matchMedia(breakpoints.small);\n    const medium = window.matchMedia(breakpoints.medium);\n    const large = window.matchMedia(breakpoints.large);\n\n    if (small.matches !== small) {\n      setSmall(small.matches);\n    }\n\n    if (medium.matches !== medium) {\n      setMedium(medium.matches);\n    }\n\n    if (large.matches !== large) {\n      setLarge(large.matches);\n    }\n\n    const listenerSmall = () => setSmall(small.matches);\n\n    const listenerMedium = () => setMedium(medium.matches);\n\n    const listenerLarge = () => setLarge(large.matches);\n\n    small.addListener(listenerSmall);\n    medium.addListener(listenerMedium);\n    large.addListener(listenerLarge);\n    return () => {\n      small.removeListener(listenerSmall);\n      medium.removeListener(listenerMedium);\n      large.removeListener(listenerLarge);\n    };\n  }, []); // publish value for render\n\n  return {\n    isSmall,\n    isMedium,\n    isLarge\n  };\n}","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/hooks/useMedia.js"],"names":["useState","useEffect","breakpoints","small","medium","large","useMedia","query","isSmall","setSmall","window","matchMedia","matches","isMedium","setMedium","isLarge","setLarge","listenerSmall","listenerMedium","listenerLarge","addListener","removeListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,oBADW;AAElBC,EAAAA,MAAM,EAAE,4CAFU;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAApB;AAMA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBT,QAAQ,CAACU,MAAM,CAACC,UAAP,CAAkBT,WAAW,CAACC,KAA9B,EAAqCS,OAAtC,CAApC;AACA,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBd,QAAQ,CAACU,MAAM,CAACC,UAAP,CAAkBT,WAAW,CAACE,MAA9B,EAAsCQ,OAAvC,CAAtC;AACA,QAAM,CAACG,OAAD,EAAUC,QAAV,IAAsBhB,QAAQ,CAACU,MAAM,CAACC,UAAP,CAAkBT,WAAW,CAACG,KAA9B,EAAqCO,OAAtC,CAApC,CAH8B,CAK9B;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACf,UAAME,KAAK,GAAGO,MAAM,CAACC,UAAP,CAAkBT,WAAW,CAACC,KAA9B,CAAd;AACA,UAAMC,MAAM,GAAGM,MAAM,CAACC,UAAP,CAAkBT,WAAW,CAACE,MAA9B,CAAf;AACA,UAAMC,KAAK,GAAGK,MAAM,CAACC,UAAP,CAAkBT,WAAW,CAACG,KAA9B,CAAd;;AAGA,QAAIF,KAAK,CAACS,OAAN,KAAkBT,KAAtB,EAA6B;AAC3BM,MAAAA,QAAQ,CAACN,KAAK,CAACS,OAAP,CAAR;AACD;;AAED,QAAIR,MAAM,CAACQ,OAAP,KAAmBR,MAAvB,EAA+B;AAC9BU,MAAAA,SAAS,CAACV,MAAM,CAACQ,OAAR,CAAT;AACD;;AAED,QAAIP,KAAK,CAACO,OAAN,KAAkBP,KAAtB,EAA6B;AAC3BW,MAAAA,QAAQ,CAACX,KAAK,CAACO,OAAP,CAAR;AACD;;AAEA,UAAMK,aAAa,GAAG,MAAMR,QAAQ,CAACN,KAAK,CAACS,OAAP,CAApC;;AACA,UAAMM,cAAc,GAAG,MAAMJ,SAAS,CAACV,MAAM,CAACQ,OAAR,CAAtC;;AACA,UAAMO,aAAa,GAAG,MAAMH,QAAQ,CAACX,KAAK,CAACO,OAAP,CAApC;;AAEAT,IAAAA,KAAK,CAACiB,WAAN,CAAkBH,aAAlB;AACAb,IAAAA,MAAM,CAACgB,WAAP,CAAmBF,cAAnB;AACAb,IAAAA,KAAK,CAACe,WAAN,CAAkBD,aAAlB;AAEA,WAAO,MAAK;AACVhB,MAAAA,KAAK,CAACkB,cAAN,CAAqBJ,aAArB;AACAb,MAAAA,MAAM,CAACiB,cAAP,CAAsBH,cAAtB;AACAb,MAAAA,KAAK,CAACgB,cAAN,CAAqBF,aAArB;AACA,KAJF;AAKA,GA/BQ,EA+BN,EA/BM,CAAT,CAN8B,CAuC9B;;AACA,SAAO;AACLX,IAAAA,OADK;AAELK,IAAAA,QAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst breakpoints = {\n  small: '(max-width: 539px)',\n  medium: '(min-width: 540px) and (max-width: 1023px)',\n  large: '(min-width: 1024px)'\n}\n\nexport function useMedia(query) {\n  const [isSmall, setSmall] = useState(window.matchMedia(breakpoints.small).matches)\n  const [isMedium, setMedium] = useState(window.matchMedia(breakpoints.medium).matches)\n  const [isLarge, setLarge] = useState(window.matchMedia(breakpoints.large).matches)\n \n  // Activity normally for componentDidMount + componentDidUpdate\n  useEffect(() => {\n   const small = window.matchMedia(breakpoints.small);\n   const medium = window.matchMedia(breakpoints.medium);\n   const large = window.matchMedia(breakpoints.large);\n\n\n   if (small.matches !== small) {\n     setSmall(small.matches);\n   }\n\n   if (medium.matches !== medium) {\n    setMedium(medium.matches);\n  }\n\n  if (large.matches !== large) {\n    setLarge(large.matches);\n  }\n\n   const listenerSmall = () => setSmall(small.matches);\n   const listenerMedium = () => setMedium(medium.matches);\n   const listenerLarge = () => setLarge(large.matches);\n\n   small.addListener(listenerSmall);\n   medium.addListener(listenerMedium);\n   large.addListener(listenerLarge);\n\n   return () =>{\n     small.removeListener(listenerSmall)\n     medium.removeListener(listenerMedium)\n     large.removeListener(listenerLarge)\n    };\n  }, []);\n\n  // publish value for render\n  return {\n    isSmall,\n    isMedium,\n    isLarge\n  }; \n}"]},"metadata":{},"sourceType":"module"}