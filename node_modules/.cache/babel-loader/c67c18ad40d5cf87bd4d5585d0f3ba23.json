{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  // const userStore = useSelector(store => store.user.data || {});\n  // const { user = {} } = userStore;\n  const hasRegisterCompleted = user => !!user.name && !!user.cpf;\n\n  const history = useHistory();\n\n  const get_authenticated_user = () => {\n    Auth.currentAuthenticatedUser().then(response => {\n      console.log(\"get_authenticated_user, response:\", response);\n      API.get(config.APIS.SOMLIVRE, `usuario/${response.attributes.sub}`, {}).then(response => {\n        console.log(\"get user data bem sucedido. Response: \", response);\n        dispatch(setUserData(response.data));\n      }).catch(error => {\n        console.log(\"get user data falhou: \", error);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    get_authenticated_user(); // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (userStore.token) history.push(\"/\");\n        break;\n\n      case \"not-exists\":\n        if (!userStore.token) history.push(\"/login\");\n        break;\n\n      case \"incomplete-registration\":\n        if (!userStore.token) history.push(\"/login\");\n        if (!hasRegisterCompleted(user)) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/authGuard.js"],"names":["React","useEffect","useSelector","useHistory","AuthGuard","props","hasRegisterCompleted","user","name","cpf","history","get_authenticated_user","Auth","currentAuthenticatedUser","then","response","console","log","API","get","config","APIS","SOMLIVRE","attributes","sub","dispatch","setUserData","data","catch","error","type","userStore","token","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEzB;AACA;AACA,QAAMC,oBAAoB,GAAGC,IAAI,IAChC,CAAC,CAACA,IAAI,CAACC,IAAP,IAAe,CAAC,CAACD,IAAI,CAACE,GADvB;;AAEA,QAAMC,OAAO,GAAGP,UAAU,EAA1B;;AAEA,QAAMQ,sBAAsB,GAAG,MAAM;AACnCC,IAAAA,IAAI,CAACC,wBAAL,GACKC,IADL,CACUC,QAAQ,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,QAAjD;AACEG,MAAAA,GAAG,CAACC,GAAJ,CAAQC,MAAM,CAACC,IAAP,CAAYC,QAApB,EAA+B,WAAUP,QAAQ,CAACQ,UAAT,CAAoBC,GAAI,EAAjE,EAAoE,EAApE,EACCV,IADD,CACMC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDF,QAAtD;AACAU,QAAAA,QAAQ,CAACC,WAAW,CAACX,QAAQ,CAACY,IAAV,CAAZ,CAAR;AACH,OAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACZb,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCY,KAAtC;AACH,OAPD;AAQD,KAXL,EAYKD,KAZL,CAYWC,KAAK,IAAI;AAChBb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACC,KAdL;AAeC,GAhBH;;AAkBE5B,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,sBAAsB,GADR,CAEhB;AACC,GAHQ,EAGP,EAHO,CAAT;AAKFV,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQI,KAAK,CAACyB,IAAd;AACE,WAAK,QAAL;AACE,YAAIC,SAAS,CAACC,KAAd,EAAqBtB,OAAO,CAACuB,IAAR,CAAa,GAAb;AACrB;;AACF,WAAK,YAAL;AACE,YAAI,CAACF,SAAS,CAACC,KAAf,EAAsBtB,OAAO,CAACuB,IAAR,CAAa,QAAb;AACtB;;AACF,WAAK,yBAAL;AACE,YAAI,CAACF,SAAS,CAACC,KAAf,EAAsBtB,OAAO,CAACuB,IAAR,CAAa,QAAb;AACtB,YAAI,CAAC3B,oBAAoB,CAACC,IAAD,CAAzB,EAAiCG,OAAO,CAACuB,IAAR,CAAa,YAAb;AACjC;;AACF;AACE;AAZJ;AAcD,GAfQ,EAeN,CAACF,SAAD,EAAYrB,OAAZ,EAAqBL,KAAK,CAACyB,IAA3B,EAAiCvB,IAAjC,CAfM,CAAT;AAiBA,SAAO,yCAAP;AACD,CAjDD;;AAmDA,eAAeH,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  \n  // const userStore = useSelector(store => store.user.data || {});\n  // const { user = {} } = userStore;\n  const hasRegisterCompleted = user =>\n   !!user.name && !!user.cpf;\n  const history = useHistory();\n\n  const get_authenticated_user = () => {\n    Auth.currentAuthenticatedUser()\n        .then(response => {\n        console.log(\"get_authenticated_user, response:\", response);          \n          API.get(config.APIS.SOMLIVRE, `usuario/${response.attributes.sub}`, {})\n          .then(response => {\n              console.log(\"get user data bem sucedido. Response: \", response);\n              dispatch(setUserData(response.data));\n          })\n          .catch(error => {\n              console.log(\"get user data falhou: \", error);\n          });\n        })\n        .catch(error => {\n        console.log(error)\n        });\n    }\n  \n    useEffect(() => {\n      get_authenticated_user()\n    // eslint-disable-next-line\n    },[])\n\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (userStore.token) history.push(\"/\");\n        break;\n      case \"not-exists\":\n        if (!userStore.token) history.push(\"/login\");\n        break;\n      case \"incomplete-registration\":\n        if (!userStore.token) history.push(\"/login\");\n        if (!hasRegisterCompleted(user)) history.push(\"/seusdados\");\n        break;\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}