{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/pages/newPassword/NewPassword.js\";\nimport React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { SimpleInput } from \"../../components/elements/Input\";\nimport Botao from \"../../components/elements/Botao\";\nimport PageContainer from \"../../components/features/PageContainer/PageContainer\";\nimport \"./NewPassword.scss\";\n\nfunction ForgotPassword(props) {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confNewPassword, setConfNewPassword] = useState(\"\");\n\n  const forgotPasswordSubmit = e => {\n    e.preventDefault();\n\n    if (newPassword !== confNewPassword) {\n      alert(\"As senhas digitadas não estão idênticas.\");\n    }\n\n    Auth.forgotPasswordSubmit(props.history.location.state.email, props.history.location.state.code, newPassword).then(data => {\n      console.log('NOVO SENHA', data);\n      props.history.push('/login');\n      console.log(props);\n      alert('Senha Trocada com Sucesso');\n    }).catch(err => {\n      console.log('ERROR', err);\n\n      if (err.code === 'CodeMismatchException') {\n        props.history.push('/codconfirmacao', {\n          email: props.history.location.state.email\n        });\n        alert('Código invalido');\n      } else {\n        alert({\n          message: err.message\n        });\n      }\n    });\n  };\n\n  return React.createElement(PageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"container-redefine-Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"RedefinePassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Redefinir senha\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: forgotPasswordSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Agora escolha sua nova senha\"), React.createElement(SimpleInput, {\n    id: \"senha\",\n    type: \"password\",\n    name: \"senha\",\n    placeholder: \"Sua Senha\",\n    label: \"Senha\",\n    onChange: e => setNewPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(SimpleInput, {\n    id: \"senha2\",\n    type: \"password\",\n    name: \"senha2\",\n    placeholder: \"Sua senha novamente\",\n    label: \"Repita a senha\",\n    onChange: e => setConfNewPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Botao, {\n    className: \"botao\",\n    classes: \"red big\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Pr\\xF3ximo\")))));\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/pages/newPassword/NewPassword.js"],"names":["React","useState","Auth","SimpleInput","Botao","PageContainer","ForgotPassword","props","newPassword","setNewPassword","confNewPassword","setConfNewPassword","forgotPasswordSubmit","e","preventDefault","alert","history","location","state","email","code","then","data","console","log","push","catch","err","message","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,WAAT,QAA6B,iCAA7B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,aAAP,MAA0B,uDAA1B;AACA,OAAO,oBAAP;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMW,oBAAoB,GAAIC,CAAD,IAAO;AAClCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIN,WAAW,KAAKE,eAApB,EAAqC;AACjCK,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACH;;AACDb,IAAAA,IAAI,CAACU,oBAAL,CAA0BL,KAAK,CAACS,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BC,KAAvD,EAA8DZ,KAAK,CAACS,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BE,IAA3F,EAAiGZ,WAAjG,EACCa,IADD,CACMC,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAA1B;AACAf,MAAAA,KAAK,CAACS,OAAN,CAAcS,IAAd,CAAmB,QAAnB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACAQ,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACH,KAND,EAOCW,KAPD,CAOOC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,GAArB;;AACA,UAAGA,GAAG,CAACP,IAAJ,KAAa,uBAAhB,EAAyC;AACrCb,QAAAA,KAAK,CAACS,OAAN,CAAcS,IAAd,CAAmB,iBAAnB,EAAsC;AAAEN,UAAAA,KAAK,EAAEZ,KAAK,CAACS,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BC;AAAtC,SAAtC;AACAJ,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACD,OAHH,MAGU;AACNA,QAAAA,KAAK,CAAC;AAAEa,UAAAA,OAAO,EAAED,GAAG,CAACC;AAAf,SAAD,CAAL;AACD;AACN,KAfD;AAgBH,GArBC;;AAuBA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,6BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEhB,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAC,WAJd;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,QAAQ,EAAEC,CAAC,IAAIJ,cAAc,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV,CAN/B;AAOE,IAAA,QAAQ,EAAE,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,qBAJd;AAKE,IAAA,KAAK,EAAC,gBALR;AAME,IAAA,QAAQ,EAAEjB,CAAC,IAAIF,kBAAkB,CAACE,CAAC,CAACgB,MAAF,CAASC,KAAV,CANnC;AAOE,IAAA,QAAQ,EAAE,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAoBE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBF,CAHF,CADF,CADF,CADF;AAkCD;;AAED,eAAexB,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { SimpleInput }  from \"../../components/elements/Input\";\nimport Botao from \"../../components/elements/Botao\";\nimport PageContainer from \"../../components/features/PageContainer/PageContainer\";\nimport \"./NewPassword.scss\";\n\nfunction ForgotPassword(props) {\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confNewPassword, setConfNewPassword] = useState(\"\");\n\n  const forgotPasswordSubmit = (e) => {\n    e.preventDefault()\n    if (newPassword !== confNewPassword) {\n        alert(\"As senhas digitadas não estão idênticas.\");\n    }\n    Auth.forgotPasswordSubmit(props.history.location.state.email, props.history.location.state.code, newPassword)\n    .then(data => {\n        console.log('NOVO SENHA', data)\n        props.history.push('/login')\n        console.log(props)\n        alert('Senha Trocada com Sucesso')\n    })\n    .catch(err => {\n        console.log('ERROR', err)\n        if(err.code === 'CodeMismatchException') {\n            props.history.push('/codconfirmacao', { email: props.history.location.state.email });\n            alert('Código invalido')\n          } else  {\n            alert({ message: err.message });\n          }\n    })\n}\n\n  return (\n    <PageContainer>\n      <section className=\"container-redefine-Password\">\n        <div className=\"RedefinePassword\">\n          <h2 className=\"title\">Redefinir senha</h2>\n\n          <form className=\"form\" onSubmit={forgotPasswordSubmit}>\n            <p>Agora escolha sua nova senha</p>\n            <SimpleInput\n              id=\"senha\"\n              type=\"password\"\n              name=\"senha\"\n              placeholder=\"Sua Senha\"\n              label=\"Senha\"\n              onChange={e => setNewPassword(e.target.value)}\n              required={true}\n            />\n            <SimpleInput\n              id=\"senha2\"\n              type=\"password\"\n              name=\"senha2\"\n              placeholder=\"Sua senha novamente\"\n              label=\"Repita a senha\"\n              onChange={e => setConfNewPassword(e.target.value)}\n              required={true}\n            />\n            <Botao className=\"botao\" classes=\"red big\">\n                Próximo\n            </Botao>\n          </form>\n        </div>\n      </section>\n    </PageContainer>\n  );\n}\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}