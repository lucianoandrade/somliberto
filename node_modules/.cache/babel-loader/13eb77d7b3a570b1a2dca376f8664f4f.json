{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/pages/editProfile/EditProfile.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport CPF from \"cpf-check\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport config from \"../../config/constants\";\nimport { API, Auth } from \"aws-amplify\";\nimport { FormikInput, MaskFormikInput } from \"../../components/elements/Input\";\nimport Botao from \"../../components/elements/Botao\";\nimport PageContainer from \"../../components/features/PageContainer/PageContainer\";\nimport \"../userData/UserData.scss\";\nimport { useSelector } from \"react-redux\";\n\nconst convertBase64 = image => {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n    reader.readAsDataURL(image);\n\n    reader.onloadend = () => {\n      resolve(reader.result);\n    };\n  });\n};\n\nfunction EditarPerfil(props) {\n  const dispatch = useDispatch();\n  const [thumbnailFile, setThumbnailFile] = useState(\"\");\n  const [preview, setPreview] = useState(\"\"); // const [user, setUser] = useState([]);\n\n  const user = useSelector(state => state.user.data); // const userOld = useSelector(state => state.user.data.user);\n\n  const avataruser = \"https://playerstars-dev-photos.s3.amazonaws.com/WhatsApp+Image+2020-01-14+at+18.07.32.jpeg\";\n  const profile_image = userOld ? userOld.profile_image : avataruser;\n  useEffect(() => {\n    setPreview(thumbnailFile ? URL.createObjectURL(thumbnailFile) : profile_image);\n  }, [thumbnailFile, profile_image]); // useEffect(() => {\n  //     API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n  //         .then(response => {\n  //             setUser(response.data.player.user);\n  //         })\n  //         .catch(error => {\n  //             console.log(\"ERRO NO GET: \", error)\n  //         })\n  // }, []);\n\n  console.log(user);\n  useEffect(() => {\n    props.setValues(userOld); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userOld]);\n\n  const onChangeFile = async e => {\n    setThumbnailFile(e.target.files[0]);\n\n    if (e.target.files[0] !== \"\") {\n      const imgBase64 = await convertBase64(e.target.files[0]);\n      console.log(\"::::::::BASE64::\", imgBase64);\n      props.setFieldValue(\"profile_image\", imgBase64);\n    }\n  };\n\n  const removePreview = () => {\n    setThumbnailFile(\"\");\n    dispatch(setUserImage(avataruser));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"containerEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titleEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Editar Perfil\"), React.createElement(\"div\", {\n    className: \"containerEditAvatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerAvatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: `url(${preview}?${Date.now()})`\n    },\n    className: \"thumbnail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerEditRemove\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"containerPutAvatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"iconEdit\",\n    src: iconedit,\n    alt: \"Icon editar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"textEdit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Alterar imagem\"), React.createElement(\"input\", {\n    className: \"inputAvatar\",\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: onChangeFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"containerPutAvatar\",\n    onClick: removePreview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"iconEdit\",\n    src: iconremove,\n    alt: \"Icon remover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"textEdit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Excluir\")))), EditForm(user))));\n}\n\nfunction EditForm(props) {\n  const onlyNumbers = _text => {\n    const replaced = _text ? _text.replace(/[^\\d]/g, \"\") : \"\";\n    return replaced;\n  };\n\n  function test_cpf(message) {\n    if (message === void 0) {\n      message = \"CPF invÃ¡lido\";\n    }\n\n    return this.test({\n      message: message,\n      name: \"cpf\",\n      exclusive: true,\n      test: function test(value) {\n        const replaced = onlyNumbers(value);\n        return CPF.validate(replaced);\n      }\n    });\n  }\n\n  Yup.addMethod(Yup.string, \"cpf\", test_cpf);\n  const address_state = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SP\", \"SE\", \"TO\"];\n  return React.createElement(PageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"container-userData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"userData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Quase pronto!\"), React.createElement(Form, {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Dados pessoais\"), React.createElement(\"div\", {\n    className: \"personalData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(FormikInput, {\n    id: \"full_name\",\n    name: \"full_name\",\n    type: \"text\",\n    placeholder: \"Seu nome completo\",\n    label: \"Nome completo\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"twoFields\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(MaskFormikInput, {\n    name: \"cpf\",\n    id: \"cpf\",\n    mask: [/[0-9]/, /\\d/, /\\d/, \".\", /\\d/, /\\d/, /\\d/, \".\", /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/],\n    type: \"text\",\n    placeholder: \"Apenas n\\xFAmeros\",\n    label: \"CPF\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(MaskFormikInput, {\n    name: \"phone_number\",\n    id: \"phone_number\",\n    mask: [\"(\", /[0-9]/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/],\n    type: \"tel\",\n    placeholder: \"Ex: (21) 92345-6789\",\n    label: \"Telefone\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }))), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Endere\\xE7o\"), React.createElement(\"div\", {\n    className: \"address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"twoFieldstwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"address_state\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Estado\"), React.createElement(Field, {\n    id: \"address_state\",\n    name: \"address_state\",\n    className: \"input\",\n    placeholder: \"Estado\",\n    required: true,\n    component: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"UF\"), address_state.map((address_state, index) => React.createElement(\"option\", {\n    value: address_state,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, address_state))), React.createElement(ErrorMessage, {\n    name: address_state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, msg => React.createElement(\"div\", {\n    className: \"messageError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, msg))), React.createElement(FormikInput, {\n    name: \"address_city\",\n    id: \"address_city\",\n    type: \"text\",\n    placeholder: \"Cidade\",\n    label: \"Cidade\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }))), React.createElement(Botao, {\n    classes: \"red big\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Salvar\")))));\n}\n\n;\nconst UserDataForm = withRouter(withFormik({\n  mapPropsToValues({\n    address_city,\n    address_complement,\n    address_neighborhood,\n    address_number,\n    address_state,\n    address_street,\n    address_zip_code,\n    cpf,\n    full_name,\n    phone_number\n  }) {\n    return {\n      address_city: address_city || \"\",\n      address_complement: address_complement || \"\",\n      address_neighborhood: address_neighborhood || \"\",\n      address_number: address_number || \"\",\n      address_state: address_state || \"\",\n      address_street: address_street || \"\",\n      address_zip_code: address_zip_code || \"\",\n      cpf: cpf || \"\",\n      full_name: full_name || \"\",\n      phone_number: phone_number || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    full_name: Yup.string().required(\"Digite seu nome completo!\"),\n    cpf: Yup.string().cpf(\"CPF invÃ¡lido\").required(\"Campo obrigatÃ³rio\"),\n    phone_number: Yup.string().required(\"Digite seu telefone!\"),\n    //address_zip_code: Yup.string()\n    //  .length(9)\n    //  .required(\"Campo obrigatÃ³rio\"),\n    //address_street: Yup.string().required(\"Digite seu endereÃ§o!\"),\n    //address_number: Yup.string().required(\"Digite o nÃºmero da sua casa!\"),\n    address_state: Yup.string().required(\"Digite seu estado de origem!\"),\n    address_city: Yup.string().required(\"Digite sua cidade!\") //address_neighborhood: Yup.string().required(\"Digite seu bairro!\")\n\n  }),\n\n  handleSubmit(values, {\n    props\n  }) {\n    Auth.currentAuthenticatedUser().then(response => {\n      console.log(\"VALUES::: \", values);\n      const options = {\n        body: {\n          address_city: values.address_city,\n          address_complement: values.address_complement,\n          address_neighborhood: values.address_neighborhood,\n          address_number: values.address_number,\n          address_state: values.address_state,\n          address_street: values.address_street,\n          address_zip_code: values.address_zip_code,\n          cpf: values.cpf,\n          email: response.attributes.email,\n          entity_id: response.attributes.sub,\n          full_name: values.full_name,\n          phone_number: values.phone_number\n        }\n      };\n      API.post(config.APIS.SOMLIVRE, \"usuario\", options).then(response => {\n        console.log(\" DADOS DO USUARIOS VALUES : \", options);\n        console.log(\" response : \", response);\n        props.history.push(\"/\");\n      }).catch(error => {\n        console.log(\"Esse Ã© o retorno das options\", options);\n        console.log(\" error : \", error);\n        window.alert(\"Erro ao enviar seus dados, revise os campos.\");\n      });\n    }).catch(error => {\n      console.log(\"erro obtendo usuario atual\", error);\n    });\n  }\n\n})(EditarPerfil));\nexport default UserDataForm;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/pages/editProfile/EditProfile.js"],"names":["React","useState","withRouter","Yup","CPF","withFormik","Form","Field","ErrorMessage","config","API","Auth","FormikInput","MaskFormikInput","Botao","PageContainer","useSelector","convertBase64","image","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","result","EditarPerfil","props","dispatch","useDispatch","thumbnailFile","setThumbnailFile","preview","setPreview","user","state","data","avataruser","profile_image","userOld","useEffect","URL","createObjectURL","console","log","setValues","onChangeFile","e","target","files","imgBase64","setFieldValue","removePreview","setUserImage","backgroundImage","Date","now","iconedit","iconremove","EditForm","onlyNumbers","_text","replaced","replace","test_cpf","message","test","name","exclusive","value","validate","addMethod","string","address_state","map","index","msg","UserDataForm","mapPropsToValues","address_city","address_complement","address_neighborhood","address_number","address_street","address_zip_code","cpf","full_name","phone_number","validationSchema","object","shape","required","handleSubmit","values","currentAuthenticatedUser","then","response","options","body","email","attributes","entity_id","sub","post","APIS","SOMLIVRE","history","push","catch","error","window","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,YAAlC,QAAsD,QAAtD;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,aAA1B;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,iCAA7C;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,aAAP,MAA0B,uDAA1B;AAEA,OAAO,2BAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBN,KAArB;;AACAI,IAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACrBL,MAAAA,OAAO,CAACE,MAAM,CAACI,MAAR,CAAP;AACH,KAFD;AAGH,GANM,CAAP;AAOD,CARD;;AAUA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC/B,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgC,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAC,EAAD,CAAtC,CAH2B,CAI3B;;AACA,QAAMkC,IAAI,GAAGnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACD,IAAN,CAAWE,IAArB,CAAxB,CAL2B,CAM3B;;AACA,QAAMC,UAAU,GAAG,4FAAnB;AACA,QAAMC,aAAa,GAAGC,OAAO,GAAGA,OAAO,CAACD,aAAX,GAA2BD,UAAxD;AAEAG,EAAAA,SAAS,CAAC,MAAM;AAEZP,IAAAA,UAAU,CAACH,aAAa,GAAGW,GAAG,CAACC,eAAJ,CAAoBZ,aAApB,CAAH,GAAwCQ,aAAtD,CAAV;AACH,GAHQ,EAGN,CAACR,aAAD,EAAgBQ,aAAhB,CAHM,CAAT,CAV2B,CAe3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEAM,EAAAA,SAAS,CAAC,MAAM;AACZb,IAAAA,KAAK,CAACkB,SAAN,CAAgBN,OAAhB,EADY,CAEX;AACJ,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;;AAMA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BhB,IAAAA,gBAAgB,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAhB;;AACA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,MAAsB,EAA1B,EAA8B;AAC1B,YAAMC,SAAS,GAAG,MAAMlC,aAAa,CAAC+B,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAArC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCM,SAAhC;AACAvB,MAAAA,KAAK,CAACwB,aAAN,CAAoB,eAApB,EAAqCD,SAArC;AACH;AAEJ,GARD;;AAUA,QAAME,aAAa,GAAG,MAAM;AACxBrB,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAH,IAAAA,QAAQ,CAACyB,YAAY,CAAChB,UAAD,CAAb,CAAR;AACH,GAHD;;AAKA,SACI,0CACI;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,WAAR;AACI,IAAA,KAAK,EAAE;AAAEiB,MAAAA,eAAe,EAAG,OAAMtB,OAAQ,IAAGuB,IAAI,CAACC,GAAL,EAAW;AAAhD,KADX;AAEI,IAAA,SAAS,EAAC,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEC,QAA/B;AAAyC,IAAA,GAAG,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,IAAI,EAAC,MAApC;AAA2C,IAAA,MAAM,EAAC,SAAlD;AAA4D,IAAA,QAAQ,EAAEX,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAsC,IAAA,OAAO,EAAEM,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEM,UAA/B;AAA2C,IAAA,GAAG,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CANJ,CAPJ,CAFJ,EAqBKC,QAAQ,CAACzB,IAAD,CArBb,CADJ,CADJ,CADJ;AA6BD;;AAED,SAASyB,QAAT,CAAmBhC,KAAnB,EAA0B;AAExB,QAAMiC,WAAW,GAAGC,KAAK,IAAI;AAC3B,UAAMC,QAAQ,GAAGD,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAH,GAAiC,EAAvD;AACA,WAAOD,QAAP;AACD,GAHD;;AAKA,WAASE,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,MAAAA,OAAO,GAAG,cAAV;AACD;;AAED,WAAO,KAAKC,IAAL,CAAU;AACfD,MAAAA,OAAO,EAAEA,OADM;AAEfE,MAAAA,IAAI,EAAE,KAFS;AAGfC,MAAAA,SAAS,EAAE,IAHI;AAIfF,MAAAA,IAAI,EAAE,SAASA,IAAT,CAAcG,KAAd,EAAqB;AACzB,cAAMP,QAAQ,GAAGF,WAAW,CAACS,KAAD,CAA5B;AACA,eAAOlE,GAAG,CAACmE,QAAJ,CAAaR,QAAb,CAAP;AACD;AAPc,KAAV,CAAP;AASD;;AAED5D,EAAAA,GAAG,CAACqE,SAAJ,CAAcrE,GAAG,CAACsE,MAAlB,EAA0B,KAA1B,EAAiCR,QAAjC;AAEA,QAAMS,aAAa,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EACpB,IADoB,EACd,IADc,EACR,IADQ,EACF,IADE,EACI,IADJ,EACU,IADV,EACgB,IADhB,EACsB,IADtB,EAC4B,IAD5B,EACkC,IADlC,EACwC,IADxC,EAC8C,IAD9C,EAEpB,IAFoB,EAEd,IAFc,EAER,IAFQ,CAAtB;AAIA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,mBAJd;AAKE,IAAA,KAAK,EAAC,eALR;AAME,IAAA,QAAQ,EAAE,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,EAAE,EAAC,KAFL;AAGE,IAAA,IAAI,EAAE,CAAC,OAAD,EAAS,IAAT,EAAc,IAAd,EAAmB,GAAnB,EAAuB,IAAvB,EAA4B,IAA5B,EAAiC,IAAjC,EAAsC,GAAtC,EAA0C,IAA1C,EAA+C,IAA/C,EAAoD,IAApD,EAAyD,GAAzD,EAA6D,IAA7D,EAAkE,IAAlE,CAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,mBALd;AAME,IAAA,KAAK,EAAC,KANR;AAOE,IAAA,QAAQ,EAAE,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,EAAE,EAAC,cAFL;AAGE,IAAA,IAAI,EAAE,CAAC,GAAD,EAAK,OAAL,EAAa,IAAb,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,IAA1B,EAA+B,IAA/B,EAAoC,IAApC,EAAyC,IAAzC,EAA8C,IAA9C,EAAmD,GAAnD,EAAuD,IAAvD,EAA4D,IAA5D,EAAiE,IAAjE,EAAsE,IAAtE,CAHR;AAIE,IAAA,IAAI,EAAC,KAJP;AAKE,IAAA,WAAW,EAAC,qBALd;AAME,IAAA,KAAK,EAAC,UANR;AAOE,IAAA,QAAQ,EAAE,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CATF,CAFF,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjCF,EAmCE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsCE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAU,IAAA,SAAS,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,eAAV;AAA0B,IAAA,IAAI,EAAC,eAA/B;AAA+C,IAAA,SAAS,EAAC,OAAzD;AAAiE,IAAA,WAAW,EAAC,QAA7E;AAAsF,IAAA,QAAQ,EAAE,IAAhG;AAAsG,IAAA,SAAS,EAAC,QAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEIA,aAAa,CAACC,GAAd,CAAkB,CAACD,aAAD,EAAgBE,KAAhB,KAA0B;AAAQ,IAAA,KAAK,EAAGF,aAAhB;AAAgC,IAAA,GAAG,EAAGE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDF,aAAhD,CAA5C,CAFJ,CAFF,EAME,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,GAAG,IAAI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,GAA/B,CADV,CANF,CAFF,EAaE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,EAAE,EAAC,cAFL;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,QAJd;AAKE,IAAA,KAAK,EAAC,QALR;AAME,IAAA,QAAQ,EAAE,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAtCF,CAnCF,EAwGE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxGF,CAFF,CADF,CADF,CADF;AAqHD;;AAAA;AAED,MAAMC,YAAY,GAAG5E,UAAU,CAC7BG,UAAU,CAAC;AACT0E,EAAAA,gBAAgB,CAAC;AACfC,IAAAA,YADe;AAEfC,IAAAA,kBAFe;AAGfC,IAAAA,oBAHe;AAIfC,IAAAA,cAJe;AAKfT,IAAAA,aALe;AAMfU,IAAAA,cANe;AAOfC,IAAAA,gBAPe;AAQfC,IAAAA,GARe;AASfC,IAAAA,SATe;AAUfC,IAAAA;AAVe,GAAD,EAWb;AACD,WAAO;AACLR,MAAAA,YAAY,EAAEA,YAAY,IAAI,EADzB;AAELC,MAAAA,kBAAkB,EAAEA,kBAAkB,IAAI,EAFrC;AAGLC,MAAAA,oBAAoB,EAAEA,oBAAoB,IAAI,EAHzC;AAILC,MAAAA,cAAc,EAAEA,cAAc,IAAI,EAJ7B;AAKLT,MAAAA,aAAa,EAAEA,aAAa,IAAI,EAL3B;AAMLU,MAAAA,cAAc,EAAEA,cAAc,IAAI,EAN7B;AAOLC,MAAAA,gBAAgB,EAAEA,gBAAgB,IAAI,EAPjC;AAQLC,MAAAA,GAAG,EAAEA,GAAG,IAAI,EARP;AASLC,MAAAA,SAAS,EAAEA,SAAS,IAAI,EATnB;AAULC,MAAAA,YAAY,EAAEA,YAAY,IAAI;AAVzB,KAAP;AAYD,GAzBQ;;AA0BTC,EAAAA,gBAAgB,EAAEtF,GAAG,CAACuF,MAAJ,GAAaC,KAAb,CAAmB;AACnCJ,IAAAA,SAAS,EAAEpF,GAAG,CAACsE,MAAJ,GAAamB,QAAb,CAAsB,2BAAtB,CADwB;AAEnCN,IAAAA,GAAG,EAAEnF,GAAG,CAACsE,MAAJ,GACFa,GADE,CACE,cADF,EAEFM,QAFE,CAEO,mBAFP,CAF8B;AAKnCJ,IAAAA,YAAY,EAAErF,GAAG,CAACsE,MAAJ,GAAamB,QAAb,CAAsB,sBAAtB,CALqB;AAMnC;AACA;AACA;AACA;AACA;AACAlB,IAAAA,aAAa,EAAEvE,GAAG,CAACsE,MAAJ,GAAamB,QAAb,CAAsB,8BAAtB,CAXoB;AAYnCZ,IAAAA,YAAY,EAAE7E,GAAG,CAACsE,MAAJ,GAAamB,QAAb,CAAsB,oBAAtB,CAZqB,CAanC;;AAbmC,GAAnB,CA1BT;;AA0CTC,EAAAA,YAAY,CAACC,MAAD,EAAS;AAAElE,IAAAA;AAAF,GAAT,EAAoB;AAC9BjB,IAAAA,IAAI,CAACoF,wBAAL,GACGC,IADH,CACQC,QAAQ,IAAI;AAChBrD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BiD,MAA1B;AACA,YAAMI,OAAO,GAAG;AACdC,QAAAA,IAAI,EAAE;AACFnB,UAAAA,YAAY,EAAEc,MAAM,CAACd,YADnB;AAEFC,UAAAA,kBAAkB,EAAEa,MAAM,CAACb,kBAFzB;AAGFC,UAAAA,oBAAoB,EAAEY,MAAM,CAACZ,oBAH3B;AAIFC,UAAAA,cAAc,EAAEW,MAAM,CAACX,cAJrB;AAKFT,UAAAA,aAAa,EAAEoB,MAAM,CAACpB,aALpB;AAMFU,UAAAA,cAAc,EAAEU,MAAM,CAACV,cANrB;AAOFC,UAAAA,gBAAgB,EAAES,MAAM,CAACT,gBAPvB;AAQFC,UAAAA,GAAG,EAAEQ,MAAM,CAACR,GARV;AASFc,UAAAA,KAAK,EAAEH,QAAQ,CAACI,UAAT,CAAoBD,KATzB;AAUFE,UAAAA,SAAS,EAAEL,QAAQ,CAACI,UAAT,CAAoBE,GAV7B;AAWFhB,UAAAA,SAAS,EAAEO,MAAM,CAACP,SAXhB;AAYFC,UAAAA,YAAY,EAAEM,MAAM,CAACN;AAZnB;AADQ,OAAhB;AAgBA9E,MAAAA,GAAG,CAAC8F,IAAJ,CAAS/F,MAAM,CAACgG,IAAP,CAAYC,QAArB,EAA+B,SAA/B,EAA0CR,OAA1C,EACGF,IADH,CACQC,QAAQ,IAAI;AAChBrD,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CqD,OAA5C;AACAtD,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BoD,QAA5B;AACArE,QAAAA,KAAK,CAAC+E,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,OALH,EAMGC,KANH,CAMSC,KAAK,IAAI;AACdlE,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CqD,OAA5C;AACAtD,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBiE,KAAzB;AACAC,QAAAA,MAAM,CAACC,KAAP,CAAa,8CAAb;AACD,OAVH;AAWD,KA9BH,EA+BGH,KA/BH,CA+BSC,KAAK,IAAI;AACdlE,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CiE,KAA1C;AACD,KAjCH;AAkCD;;AA7EQ,CAAD,CAAV,CA8EGnF,YA9EH,CAD6B,CAA/B;AAkFA,eAAemD,YAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { withRouter } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport CPF from \"cpf-check\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport config from \"../../config/constants\";\nimport { API, Auth } from \"aws-amplify\";\n\nimport { FormikInput, MaskFormikInput } from \"../../components/elements/Input\";\nimport Botao from \"../../components/elements/Botao\";\nimport PageContainer from \"../../components/features/PageContainer/PageContainer\";\n\nimport \"../userData/UserData.scss\";\nimport { useSelector } from \"react-redux\";\n\nconst convertBase64 = (image) => {\n  return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n      reader.readAsDataURL(image);\n      reader.onloadend = () => {\n          resolve(reader.result)\n      };\n  })\n};\n\nfunction EditarPerfil(props) {\n  const dispatch = useDispatch()\n  const [thumbnailFile, setThumbnailFile] = useState(\"\");\n  const [preview, setPreview] = useState(\"\")\n  // const [user, setUser] = useState([]);\n  const user = useSelector(state => state.user.data)\n  // const userOld = useSelector(state => state.user.data.user);\n  const avataruser = \"https://playerstars-dev-photos.s3.amazonaws.com/WhatsApp+Image+2020-01-14+at+18.07.32.jpeg\";\n  const profile_image = userOld ? userOld.profile_image : avataruser;\n\n  useEffect(() => {\n\n      setPreview(thumbnailFile ? URL.createObjectURL(thumbnailFile) : profile_image);\n  }, [thumbnailFile, profile_image])\n\n  // useEffect(() => {\n  //     API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n  //         .then(response => {\n  //             setUser(response.data.player.user);\n  //         })\n  //         .catch(error => {\n  //             console.log(\"ERRO NO GET: \", error)\n  //         })\n  // }, []);\n\n  console.log(user)\n\n  useEffect(() => {\n      props.setValues(userOld)\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userOld])\n\n\n  const onChangeFile = async (e) => {\n      setThumbnailFile(e.target.files[0])\n      if (e.target.files[0] !== \"\") {\n          const imgBase64 = await convertBase64(e.target.files[0])\n          console.log(\"::::::::BASE64::\", imgBase64)\n          props.setFieldValue(\"profile_image\", imgBase64)\n      }\n\n  }\n\n  const removePreview = () => {\n      setThumbnailFile(\"\")\n      dispatch(setUserImage(avataruser))\n  }\n\n  return (\n      <>\n          <section className=\"containerEditProfile\">\n              <div className=\"contentEditProfile\">\n                  <h2 className=\"titleEditProfile\">Editar Perfil</h2>\n                  <div className=\"containerEditAvatar\">\n                      <div className=\"containerAvatar\">\n                          <div id=\"thumbnail\"\n                              style={{ backgroundImage: `url(${preview}?${Date.now()})`}}\n                              className=\"thumbnail\"\n                          ></div>\n                      </div>\n                      <div className=\"containerEditRemove\">\n                          <label className=\"containerPutAvatar\">\n                              <img className=\"iconEdit\" src={iconedit} alt=\"Icon editar\" />\n                              <span className=\"textEdit\">Alterar imagem</span>\n                              <input className=\"inputAvatar\" type=\"file\" accept=\"image/*\" onChange={onChangeFile} />\n                          </label>\n                          <label className=\"containerPutAvatar\" onClick={removePreview}>\n                              <img className=\"iconEdit\" src={iconremove} alt=\"Icon remover\" />\n                              <span className=\"textEdit\" >Excluir</span>\n                          </label>\n                      </div>\n                  </div>\n                  {EditForm(user)}\n              </div>\n          </section>\n      </>\n  )\n}\n\nfunction EditForm (props) {\n  \n  const onlyNumbers = _text => {\n    const replaced = _text ? _text.replace(/[^\\d]/g, \"\") : \"\";\n    return replaced;\n  };\n  \n  function test_cpf(message) {\n    if (message === void 0) {\n      message = \"CPF invÃ¡lido\";\n    }\n  \n    return this.test({\n      message: message,\n      name: \"cpf\",\n      exclusive: true,\n      test: function test(value) {\n        const replaced = onlyNumbers(value);\n        return CPF.validate(replaced);\n      }\n    });\n  }\n  \n  Yup.addMethod(Yup.string, \"cpf\", test_cpf);\n  \n  const address_state = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\",\n    \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\",\n    \"SP\", \"SE\", \"TO\"];\n\n  return (\n    <PageContainer>\n      <section className=\"container-userData\">\n        <div className=\"userData\">\n          <h2 className=\"title\">Quase pronto!</h2>\n          <Form className=\"form\">\n            <h3>Dados pessoais</h3>\n            <div className=\"personalData\">\n              <FormikInput\n                id=\"full_name\"\n                name=\"full_name\"\n                type=\"text\"\n                placeholder=\"Seu nome completo\"\n                label=\"Nome completo\"\n                required={true}\n              />\n              <div className=\"twoFields\">\n                <MaskFormikInput\n                  name=\"cpf\"\n                  id=\"cpf\"\n                  mask={[/[0-9]/,/\\d/,/\\d/,\".\",/\\d/,/\\d/,/\\d/,\".\",/\\d/,/\\d/,/\\d/,\"-\",/\\d/,/\\d/]}\n                  type=\"text\"\n                  placeholder=\"Apenas nÃºmeros\"\n                  label=\"CPF\"\n                  required={true}\n                />\n\n                <MaskFormikInput\n                  name=\"phone_number\"\n                  id=\"phone_number\"\n                  mask={[\"(\",/[0-9]/,/\\d/,\")\",\" \",/\\d/,/\\d/,/\\d/,/\\d/,/\\d/,\"-\",/\\d/,/\\d/,/\\d/,/\\d/]}\n                  type=\"tel\"\n                  placeholder=\"Ex: (21) 92345-6789\"\n                  label=\"Telefone\"\n                  required={true}\n                />\n              </div>\n            </div>\n            <h3>EndereÃ§o</h3>\n\n            <div className=\"address\">\n              {/*<div className=\"twoFieldstwo\">\n                <MaskFormikInput\n                  name=\"address_zip_code\"\n                  mask={[/[0-9]/,/\\d/,/\\d/,/\\d/,/\\d/,\"-\",/\\d/,/\\d/,/\\d/]}\n                  id=\"address_zip_code\"\n                  type=\"text\"\n                  placeholder=\"Apenas nÃºmeros\"\n                  label=\"cep\"\n                  required={true}\n                />\n\n                <FormikInput\n                  name=\"address_street\"\n                  id=\"address_street\"\n                  type=\"text\"\n                  placeholder=\"Preencha seu endereÃ§o\"\n                  label=\"Endereco\"\n                  required={true}\n                />\n              </div>\n              <div className=\"twoFieldstwo\">\n                <FormikInput\n                  name=\"address_number\"\n                  id=\"address_number\"\n                  type=\"text\"\n                  placeholder=\"NÃºmero\"\n                  label=\"NÃºmero\"\n                  required={true}\n                />\n                <FormikInput\n                  name=\"address_complement\"\n                  id=\"address_complement\"\n                  type=\"text\"\n                  placeholder=\"Complemento\"\n                  label=\"Complemento (opcional)\"\n                />\n              </div> */}\n              <div className=\"twoFieldstwo\">\n\n                <fieldset className=\"field\">\n                  <label className=\"label\" htmlFor=\"address_state\">Estado</label>\n                  <Field id=\"address_state\" name=\"address_state\" className=\"input\" placeholder=\"Estado\" required={true} component=\"select\">\n                    <option value=\"\">UF</option>\n                    { address_state.map((address_state, index) => <option value={ address_state } key={ index }>{ address_state }</option>) }\n                  </Field>\n                  <ErrorMessage name={address_state}>\n                    {msg => <div className=\"messageError\">{msg}</div>}\n                  </ErrorMessage>\n                </fieldset>\n\n                <FormikInput\n                  name=\"address_city\"\n                  id=\"address_city\"\n                  type=\"text\"\n                  placeholder=\"Cidade\"\n                  label=\"Cidade\"\n                  required={true}\n                />\n              {/*<FormikInput\n                  name=\"address_neighborhood\"\n                  id=\"address_neighborhood\"\n                  type=\"text\"\n                  placeholder=\"Bairro\"\n                  label=\"Bairro\"\n                  required={true}\n                /> */}\n              </div>\n            </div>\n            <Botao classes=\"red big\">\n              Salvar\n            </Botao>\n          </Form>\n        </div>\n      </section>\n    </PageContainer>\n  );\n};\n\nconst UserDataForm = withRouter(\n  withFormik({\n    mapPropsToValues({\n      address_city,\n      address_complement,\n      address_neighborhood,\n      address_number,\n      address_state,\n      address_street,\n      address_zip_code,\n      cpf,\n      full_name,\n      phone_number\n    }) {\n      return {\n        address_city: address_city || \"\",\n        address_complement: address_complement || \"\",\n        address_neighborhood: address_neighborhood || \"\",\n        address_number: address_number || \"\",\n        address_state: address_state || \"\",\n        address_street: address_street || \"\",\n        address_zip_code: address_zip_code || \"\",\n        cpf: cpf || \"\",\n        full_name: full_name || \"\",\n        phone_number: phone_number || \"\"\n      };\n    },\n    validationSchema: Yup.object().shape({\n      full_name: Yup.string().required(\"Digite seu nome completo!\"),\n      cpf: Yup.string()\n        .cpf(\"CPF invÃ¡lido\")\n        .required(\"Campo obrigatÃ³rio\"),\n      phone_number: Yup.string().required(\"Digite seu telefone!\"),\n      //address_zip_code: Yup.string()\n      //  .length(9)\n      //  .required(\"Campo obrigatÃ³rio\"),\n      //address_street: Yup.string().required(\"Digite seu endereÃ§o!\"),\n      //address_number: Yup.string().required(\"Digite o nÃºmero da sua casa!\"),\n      address_state: Yup.string().required(\"Digite seu estado de origem!\"),\n      address_city: Yup.string().required(\"Digite sua cidade!\"),\n      //address_neighborhood: Yup.string().required(\"Digite seu bairro!\")\n    }),\n\n    handleSubmit(values, { props }) {\n      Auth.currentAuthenticatedUser()\n        .then(response => {\n          console.log(\"VALUES::: \", values);\n          const options = {\n            body: {\n                address_city: values.address_city,\n                address_complement: values.address_complement,\n                address_neighborhood: values.address_neighborhood,\n                address_number: values.address_number,\n                address_state: values.address_state,\n                address_street: values.address_street,\n                address_zip_code: values.address_zip_code,\n                cpf: values.cpf,\n                email: response.attributes.email,\n                entity_id: response.attributes.sub,\n                full_name: values.full_name,\n                phone_number: values.phone_number\n            }\n          };\n          API.post(config.APIS.SOMLIVRE, \"usuario\", options)\n            .then(response => {\n              console.log(\" DADOS DO USUARIOS VALUES : \", options);\n              console.log(\" response : \", response);\n              props.history.push(\"/\");\n            })\n            .catch(error => {\n              console.log(\"Esse Ã© o retorno das options\", options);\n              console.log(\" error : \", error);\n              window.alert(\"Erro ao enviar seus dados, revise os campos.\");\n            });\n        })\n        .catch(error => {\n          console.log(\"erro obtendo usuario atual\", error);\n        });\n    }\n  })(EditarPerfil)\n);\n\nexport default UserDataForm;\n"]},"metadata":{},"sourceType":"module"}