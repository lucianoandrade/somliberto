{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(store => store.user.data || {});\n  const {\n    user = {}\n  } = userStore;\n\n  const hasRegisterCompleted = user => !!user.cpf && !!user.full_name && !!user.phone_number;\n\n  const history = useHistory();\n  console.log(hasRegisterCompleted(user));\n  console.log(props.userLog);\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (props.userLog) history.push(\"/\");\n        break;\n\n      case \"not-exists\":\n        if (!props.userLog) history.push(\"/login\");\n        break;\n\n      case \"incomplete-registration\":\n        // if (!props.userLog) history.push(\"/login\");\n        if (!hasRegisterCompleted(user) && props.userLog) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user, props.userLog]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/auth.js"],"names":["React","useEffect","useSelector","useHistory","AuthGuard","props","userStore","store","user","data","hasRegisterCompleted","cpf","full_name","phone_number","history","console","log","userLog","type","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,IAAmB,EAA7B,CAA7B;AACA,QAAM;AAAED,IAAAA,IAAI,GAAG;AAAT,MAAgBF,SAAtB;;AACA,QAAMI,oBAAoB,GAAGF,IAAI,IAC/B,CAAC,CAACA,IAAI,CAACG,GAAP,IAAc,CAAC,CAACH,IAAI,CAACI,SAArB,IAAkC,CAAC,CAACJ,IAAI,CAACK,YAD3C;;AAEA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYN,oBAAoB,CAACF,IAAD,CAAhC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,OAAlB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQI,KAAK,CAACa,IAAd;AACE,WAAK,QAAL;AACE,YAAIb,KAAK,CAACY,OAAV,EAAmBH,OAAO,CAACK,IAAR,CAAa,GAAb;AACnB;;AACF,WAAK,YAAL;AACE,YAAI,CAACd,KAAK,CAACY,OAAX,EAAoBH,OAAO,CAACK,IAAR,CAAa,QAAb;AACpB;;AACF,WAAK,yBAAL;AACE;AACA,YAAI,CAACT,oBAAoB,CAACF,IAAD,CAArB,IAA+BH,KAAK,CAACY,OAAzC,EAAkDH,OAAO,CAACK,IAAR,CAAa,YAAb;AAClD;;AACF;AACE;AAZJ;AAcD,GAfQ,EAeN,CAACb,SAAD,EAAYQ,OAAZ,EAAqBT,KAAK,CAACa,IAA3B,EAAiCV,IAAjC,EAAuCH,KAAK,CAACY,OAA7C,CAfM,CAAT;AAiBA,SAAO,yCAAP;AACD,CA5BD;;AA8BA,eAAeb,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(store => store.user.data || {});\n  const { user = {} } = userStore;\n  const hasRegisterCompleted = user =>\n    !!user.cpf && !!user.full_name && !!user.phone_number;\n  const history = useHistory();\n\n  console.log(hasRegisterCompleted(user));\n  console.log(props.userLog)\n\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (props.userLog) history.push(\"/\");\n        break;\n      case \"not-exists\":\n        if (!props.userLog) history.push(\"/login\");\n        break;\n      case \"incomplete-registration\":\n        // if (!props.userLog) history.push(\"/login\");\n        if (!hasRegisterCompleted(user) && props.userLog) history.push(\"/seusdados\");\n        break;\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user, props.userLog]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}