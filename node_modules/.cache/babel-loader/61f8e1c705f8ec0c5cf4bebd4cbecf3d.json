{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(store => store.user.data || {});\n  const {\n    user = {}\n  } = userStore;\n\n  const hasRegisterCompleted = user => !!user.cpf;\n\n  const history = useHistory();\n  const {\n    isAuth\n  } = props;\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (userStore.entity_id) history.push(\"/home\");\n        break;\n\n      case \"not-exists\":\n        if (!userStore.entity_id) history.push(\"/login\");\n        break;\n\n      case \"incomplete-registration\":\n        if (!userStore.entity_id) history.push(\"/login\");\n        if (!hasRegisterCompleted(user) && !!isAuth) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user, isAuth]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/authGuard.js"],"names":["React","useEffect","useSelector","useHistory","AuthGuard","props","userStore","store","user","data","hasRegisterCompleted","cpf","history","isAuth","type","entity_id","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,IAAmB,EAA7B,CAA7B;AACA,QAAM;AAAED,IAAAA,IAAI,GAAG;AAAT,MAAgBF,SAAtB;;AACA,QAAMI,oBAAoB,GAAGF,IAAI,IAAI,CAAC,CAACA,IAAI,CAACG,GAA5C;;AACA,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAaR,KAAnB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQI,KAAK,CAACS,IAAd;AACE,WAAK,QAAL;AACE,YAAIR,SAAS,CAACS,SAAd,EAAyBH,OAAO,CAACI,IAAR,CAAa,OAAb;AACzB;;AACF,WAAK,YAAL;AACE,YAAI,CAACV,SAAS,CAACS,SAAf,EAA0BH,OAAO,CAACI,IAAR,CAAa,QAAb;AAC1B;;AACF,WAAK,yBAAL;AACE,YAAI,CAACV,SAAS,CAACS,SAAf,EAA0BH,OAAO,CAACI,IAAR,CAAa,QAAb;AAC1B,YAAI,CAACN,oBAAoB,CAACF,IAAD,CAArB,IAA+B,CAAC,CAACK,MAArC,EAA6CD,OAAO,CAACI,IAAR,CAAa,YAAb;AAC7C;;AACF;AACE;AAZJ;AAcD,GAfQ,EAeN,CAACV,SAAD,EAAYM,OAAZ,EAAqBP,KAAK,CAACS,IAA3B,EAAiCN,IAAjC,EAAuCK,MAAvC,CAfM,CAAT;AAiBA,SAAO,yCAAP;AACD,CA1BD;;AA4BA,eAAeT,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(store => store.user.data || {});\n  const { user = {} } = userStore;\n  const hasRegisterCompleted = user => !!user.cpf;\n  const history = useHistory();\n\n  const { isAuth } = props\n\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (userStore.entity_id) history.push(\"/home\");\n        break;\n      case \"not-exists\":\n        if (!userStore.entity_id) history.push(\"/login\");\n        break;\n      case \"incomplete-registration\":\n        if (!userStore.entity_id) history.push(\"/login\");\n        if (!hasRegisterCompleted(user) && !!isAuth) history.push(\"/seusdados\");\n        break;\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user, isAuth]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}