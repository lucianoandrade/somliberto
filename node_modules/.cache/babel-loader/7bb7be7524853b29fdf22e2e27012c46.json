{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  console.log(props);\n  const userStore = useSelector(store => store.user.data || {});\n  const {\n    user = {}\n  } = userStore;\n\n  const hasRegisterCompleted = user => !!user.name && !!user.cpf;\n\n  const history = useHistory();\n  useEffect(() => {\n    switch (props.signInUserSession.idToken) {\n      case \"exists\":\n        if (userStore.token) history.push(\"/\");\n        break;\n\n      case \"not-exists\":\n        if (!userStore.token) history.push(\"/login\");\n        break;\n\n      case \"incomplete-registration\":\n        if (!userStore.token) history.push(\"/login\");\n        if (!hasRegisterCompleted(user)) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/authGuard.js"],"names":["React","useEffect","useSelector","useHistory","AuthGuard","props","console","log","userStore","store","user","data","hasRegisterCompleted","name","cpf","history","signInUserSession","idToken","token","push","type"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,IAAmB,EAA7B,CAA7B;AACA,QAAM;AAAED,IAAAA,IAAI,GAAG;AAAT,MAAgBF,SAAtB;;AAEA,QAAMI,oBAAoB,GAAGF,IAAI,IAAI,CAAC,CAACA,IAAI,CAACG,IAAP,IAAe,CAAC,CAACH,IAAI,CAACI,GAA3D;;AACA,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQI,KAAK,CAACW,iBAAN,CAAwBC,OAAhC;AACE,WAAK,QAAL;AACE,YAAIT,SAAS,CAACU,KAAd,EAAqBH,OAAO,CAACI,IAAR,CAAa,GAAb;AACrB;;AACF,WAAK,YAAL;AACE,YAAI,CAACX,SAAS,CAACU,KAAf,EAAsBH,OAAO,CAACI,IAAR,CAAa,QAAb;AACtB;;AACF,WAAK,yBAAL;AACE,YAAI,CAACX,SAAS,CAACU,KAAf,EAAsBH,OAAO,CAACI,IAAR,CAAa,QAAb;AACtB,YAAI,CAACP,oBAAoB,CAACF,IAAD,CAAzB,EAAiCK,OAAO,CAACI,IAAR,CAAa,YAAb;AACjC;;AACF;AACE;AAZJ;AAcD,GAfQ,EAeN,CAACX,SAAD,EAAYO,OAAZ,EAAqBV,KAAK,CAACe,IAA3B,EAAiCV,IAAjC,CAfM,CAAT;AAiBA,SAAO,yCAAP;AACD,CA5BD;;AA8BA,eAAeN,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  \n  console.log(props)\n\n  const userStore = useSelector(store => store.user.data || {});\n  const { user = {} } = userStore;\n  \n  const hasRegisterCompleted = user => !!user.name && !!user.cpf;\n  const history = useHistory();\n\n  useEffect(() => {\n    switch (props.signInUserSession.idToken) {\n      case \"exists\":\n        if (userStore.token) history.push(\"/\");\n        break;\n      case \"not-exists\":\n        if (!userStore.token) history.push(\"/login\");\n        break;\n      case \"incomplete-registration\":\n        if (!userStore.token) history.push(\"/login\");\n        if (!hasRegisterCompleted(user)) history.push(\"/seusdados\");\n        break;\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, user]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}