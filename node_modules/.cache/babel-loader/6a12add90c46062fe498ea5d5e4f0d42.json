{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(store => store.user.data || {});\n  const {\n    user = {}\n  } = userStore;\n\n  const hasRegisterCompleted = user => !!user.speciality && !!user.name && !!user.phone;\n\n  const history = useHistory();\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (props.token) history.push(\"/\");\n        break;\n\n      case \"not-exists\":\n        if (!props.token) history.push(\"/login\");\n        break;\n\n      case \"incomplete-registration\":\n        // if (!userStore.token) history.push(\"/login\");\n        if (!hasRegisterCompleted(user) && props.token) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, props.token, user]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/auth.js"],"names":["React","useEffect","useSelector","useHistory","AuthGuard","props","userStore","store","user","data","hasRegisterCompleted","speciality","name","phone","history","type","token","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,IAAmB,EAA7B,CAA7B;AACA,QAAM;AAAED,IAAAA,IAAI,GAAG;AAAT,MAAgBF,SAAtB;;AACA,QAAMI,oBAAoB,GAAGF,IAAI,IAC/B,CAAC,CAACA,IAAI,CAACG,UAAP,IAAqB,CAAC,CAACH,IAAI,CAACI,IAA5B,IAAoC,CAAC,CAACJ,IAAI,CAACK,KAD7C;;AAEA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQI,KAAK,CAACU,IAAd;AACE,WAAK,QAAL;AACE,YAAIV,KAAK,CAACW,KAAV,EAAiBF,OAAO,CAACG,IAAR,CAAa,GAAb;AACjB;;AACF,WAAK,YAAL;AACE,YAAI,CAACZ,KAAK,CAACW,KAAX,EAAkBF,OAAO,CAACG,IAAR,CAAa,QAAb;AAClB;;AACF,WAAK,yBAAL;AACE;AACA,YAAI,CAACP,oBAAoB,CAACF,IAAD,CAArB,IAA+BH,KAAK,CAACW,KAAzC,EAAiDF,OAAO,CAACG,IAAR,CAAa,YAAb;AACjD;;AACF;AACE;AAZJ;AAcD,GAfQ,EAeN,CAACX,SAAD,EAAYQ,OAAZ,EAAqBT,KAAK,CAACU,IAA3B,EAAiCV,KAAK,CAACW,KAAvC,EAA8CR,IAA9C,CAfM,CAAT;AAiBA,SAAO,yCAAP;AACD,CAzBD;;AA2BA,eAAeJ,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(store => store.user.data || {});\n  const { user = {} } = userStore;\n  const hasRegisterCompleted = user =>\n    !!user.speciality && !!user.name && !!user.phone;\n  const history = useHistory();\n\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (props.token) history.push(\"/\");\n        break;\n      case \"not-exists\":\n        if (!props.token) history.push(\"/login\");\n        break;\n      case \"incomplete-registration\":\n        // if (!userStore.token) history.push(\"/login\");\n        if (!hasRegisterCompleted(user) && props.token)  history.push(\"/seusdados\");\n        break;\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, props.token, user]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}