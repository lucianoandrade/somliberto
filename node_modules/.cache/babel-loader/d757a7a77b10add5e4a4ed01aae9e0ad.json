{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(state => state.user.data || {});\n  const history = useHistory();\n  const {\n    isAuth\n  } = props;\n  console.log(isAuth);\n  useEffect(() => {\n    switch (props.type) {\n      case \"incomplete-registration\":\n        if (userStore.cpf === undefined && isAuth.signInUserSession !== undefined) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, isAuth]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/authGuard.js"],"names":["React","useEffect","useSelector","useHistory","AuthGuard","props","userStore","state","user","data","history","isAuth","console","log","type","cpf","undefined","signInUserSession","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,IAAmB,EAA7B,CAA7B;AACA,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaN,KAAnB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQI,KAAK,CAACS,IAAd;AACE,WAAK,yBAAL;AACE,YAAKR,SAAS,CAACS,GAAV,KAAkBC,SAAnB,IAAkCL,MAAM,CAACM,iBAAP,KAA6BD,SAAnE,EAA+EN,OAAO,CAACQ,IAAR,CAAa,YAAb;AAC/E;;AACF;AACE;AALJ;AAOD,GARQ,EAQN,CAACZ,SAAD,EAAYI,OAAZ,EAAqBL,KAAK,CAACS,IAA3B,EAAiCH,MAAjC,CARM,CAAT;AAUA,SAAO,yCAAP;AACD,CAlBD;;AAoBA,eAAeP,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(state => state.user.data || {});\n  const history = useHistory();\n  const { isAuth } = props\n\n  console.log(isAuth)\n  \n  useEffect(() => {\n    switch (props.type) {\n      case \"incomplete-registration\":\n        if ((userStore.cpf === undefined) && (isAuth.signInUserSession !== undefined)) history.push(\"/seusdados\"); \n        break;\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, isAuth]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}