{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const history = useHistory();\n  console.log(props.userLog);\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (props.userLog) history.push(\"/\");\n        break;\n\n      case \"not-exists\":\n        if (!props.userLog) history.push(\"/login\");\n        break;\n\n      case \"incomplete-registration\":\n        // if (!props.userLog) history.push(\"/login\");\n        if (props.userLog) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [history, props.type, props.userLog]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/auth.js"],"names":["React","useEffect","useHistory","AuthGuard","props","history","console","log","userLog","type","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEzB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,OAAlB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQG,KAAK,CAACK,IAAd;AACE,WAAK,QAAL;AACE,YAAIL,KAAK,CAACI,OAAV,EAAmBH,OAAO,CAACK,IAAR,CAAa,GAAb;AACnB;;AACF,WAAK,YAAL;AACE,YAAI,CAACN,KAAK,CAACI,OAAX,EAAoBH,OAAO,CAACK,IAAR,CAAa,QAAb;AACpB;;AACF,WAAK,yBAAL;AACE;AACA,YAAIN,KAAK,CAACI,OAAV,EAAmBH,OAAO,CAACK,IAAR,CAAa,YAAb;AACnB;;AACF;AACE;AAZJ;AAcD,GAfQ,EAeN,CAACL,OAAD,EAAUD,KAAK,CAACK,IAAhB,EAAsBL,KAAK,CAACI,OAA5B,CAfM,CAAT;AAiBA,SAAO,yCAAP;AACD,CAvBD;;AAyBA,eAAeL,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n\n  const history = useHistory();\n  console.log(props.userLog)\n\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (props.userLog) history.push(\"/\");\n        break;\n      case \"not-exists\":\n        if (!props.userLog) history.push(\"/login\");\n        break;\n      case \"incomplete-registration\":\n        // if (!props.userLog) history.push(\"/login\");\n        if (props.userLog) history.push(\"/seusdados\");\n        break;\n      default:\n        return;\n    }\n  }, [history, props.type, props.userLog]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}