{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(state => state.user.data || {});\n  console.log(userStore);\n  const history = useHistory();\n  const {\n    isAuth\n  } = props; // console.log(hasRegisterCompleted(user) === undefined)\n\n  console.log(isAuth.signInUserSession !== undefined);\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (isAuth.signInUserSession) history.push(\"/\");\n        break;\n\n      case \"not-exists\":\n        if (!isAuth.signInUserSession) history.push(\"/login\");\n        break;\n\n      case \"incomplete-registration\":\n        if (userStore === undefined && isAuth.signInUserSession !== undefined) history.push(\"/seusdados\");\n        break;\n\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, isAuth]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default AuthGuard;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/SomLivre/novo-frontend/src/components/features/PageContainer/authGuard.js"],"names":["React","useEffect","useSelector","useHistory","AuthGuard","props","userStore","state","user","data","console","log","history","isAuth","signInUserSession","undefined","type","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,IAAmB,EAA7B,CAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,QAAMM,OAAO,GAAGT,UAAU,EAA1B;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAaR,KAAnB,CALyB,CAOzB;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACC,iBAAP,KAA6BC,SAAzC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQI,KAAK,CAACW,IAAd;AACE,WAAK,QAAL;AACE,YAAIH,MAAM,CAACC,iBAAX,EAA8BF,OAAO,CAACK,IAAR,CAAa,GAAb;AAC9B;;AACF,WAAK,YAAL;AACE,YAAI,CAACJ,MAAM,CAACC,iBAAZ,EAA+BF,OAAO,CAACK,IAAR,CAAa,QAAb;AAC/B;;AACF,WAAK,yBAAL;AACE,YAAKX,SAAS,KAAKS,SAAf,IAA8BF,MAAM,CAACC,iBAAP,KAA6BC,SAA/D,EAA2EH,OAAO,CAACK,IAAR,CAAa,YAAb;AAC3E;;AACF;AACE;AAXJ;AAaD,GAdQ,EAcN,CAACX,SAAD,EAAYM,OAAZ,EAAqBP,KAAK,CAACW,IAA3B,EAAiCH,MAAjC,CAdM,CAAT;AAgBA,SAAO,yCAAP;AACD,CA3BD;;AA6BA,eAAeT,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthGuard = props => {\n  const userStore = useSelector(state => state.user.data || {});\n  console.log(userStore)\n  const history = useHistory();\n\n  const { isAuth } = props\n\n  // console.log(hasRegisterCompleted(user) === undefined)\n  console.log(isAuth.signInUserSession !== undefined)\n\n  useEffect(() => {\n    switch (props.type) {\n      case \"exists\":\n        if (isAuth.signInUserSession) history.push(\"/\");\n        break;\n      case \"not-exists\":\n        if (!isAuth.signInUserSession) history.push(\"/login\");\n        break;\n      case \"incomplete-registration\":\n        if ((userStore === undefined) && (isAuth.signInUserSession !== undefined)) history.push(\"/seusdados\");\n        break;\n      default:\n        return;\n    }\n  }, [userStore, history, props.type, isAuth]);\n\n  return <></>;\n};\n\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}